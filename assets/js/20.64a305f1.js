(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{621:function(r,s,t){"use strict";t.r(s);var e=t(69),a=Object(e.a)({},(function(){var r=this,s=r.$createElement,t=r._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"_02-整体架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_02-整体架构"}},[r._v("#")]),r._v(" 02. 整体架构")]),r._v(" "),t("p",[r._v("MockStar 是一个专注数据模拟（数据打桩）的工具，可以更容易编写、管理和使用模拟数据。")]),r._v(" "),t("h2",{attrs:{id:"_1-基于-express-实现-mock-server-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-基于-express-实现-mock-server-服务"}},[r._v("#")]),r._v(" 1. 基于 Express 实现 mock server 服务")]),r._v(" "),t("p",[r._v("mock server 服务是基于 "),t("a",{attrs:{href:"http://expressjs.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Express"),t("OutboundLink")],1),r._v(" "),t("code",[r._v("4.x")]),r._v(" 版本实现的。")]),r._v(" "),t("p",[r._v("使用 "),t("code",[r._v("mockstar start")]),r._v(" 命令之后，即会启动一个 Express 服务，端口默认为 "),t("code",[r._v("9527")]),r._v("，启动端口可以通过下列方式来修改：")]),r._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[r._v("$ mockstar start --port"),t("span",{pre:!0,attrs:{class:"token operator"}},[r._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[r._v("9527")]),r._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[r._v("# or")]),r._v("\n$ mockstar start -p "),t("span",{pre:!0,attrs:{class:"token number"}},[r._v("9527")]),r._v("\n")])])]),t("h2",{attrs:{id:"_2-基于文件系统来构造桩对象和桩数据（模拟数据）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-基于文件系统来构造桩对象和桩数据（模拟数据）"}},[r._v("#")]),r._v(" 2. 基于文件系统来构造桩对象和桩数据（模拟数据）")]),r._v(" "),t("p",[r._v("无需依赖数据库，MockStar 是基于文件系统来构造 mock server 的。只需要按照约定的规则编写桩对象和桩数据，MockStar 会自动识别分析，最后结合 Express，生成一个 mock server 和对应的后台管理页面。")])])}),[],!1,null,null,null);s.default=a.exports}}]);