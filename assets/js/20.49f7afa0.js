(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{634:function(t,s,a){"use strict";a.r(s);var e=a(69),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mockstar-config-js-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mockstar-config-js-配置"}},[t._v("#")]),t._v(" mockstar.config.js 配置")]),t._v(" "),a("p",[t._v("MockStar 需要依赖一个 "),a("code",[t._v("mockstar.config.js")]),t._v(" 配置文件，且应该放置在 MockStar 项目的根目录内。")]),t._v(" "),a("h2",{attrs:{id:"_1-文件示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-文件示例"}},[t._v("#")]),t._v(" 1. 文件示例")]),t._v(" "),a("blockquote",[a("p",[t._v("目前仅支持 JS 配置文件")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更多配置说明，请参考 https://mockstarjs.github.io/mockstar/api/mockstar-config.html")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mockstar-app 项目根目录")]),t._v("\n  rootPath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" __dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mock server 桩数据模块目录")]),t._v("\n  mockServerPath"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./mock_server'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mockstar 启动之后的服务端口号")]),t._v("\n  port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9527")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构建之后的目录，也是运行产物临时目录")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// buildPath: path.resolve(__dirname, './build'),")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 日志输出目录")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// logPath: path.resolve(__dirname, './build/logs'),")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 应用的名字，用于标识一个服务，格式为 mockstar_${this.port}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// name: mockstar_9527,")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命名空间")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// namespace: '',")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态资源的基础路径，例如 /s/ ，或者 /s/t/")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// staticBasePath: '/',")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否监听文件变化，推荐本地开发模式下使用")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// watch: false,")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否为开发模式")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// isDev: false,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-字段说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-字段说明"}},[t._v("#")]),t._v(" 2. 字段说明")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字段名")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("默认值")]),t._v(" "),a("th",[t._v("含义描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("rootPath")])]),t._v(" "),a("td",[a("code",[t._v("String")])]),t._v(" "),a("td",[a("code",[t._v("__dirname")])]),t._v(" "),a("td",[t._v("MockStar 项目根目录")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("buildPath")])]),t._v(" "),a("td",[a("code",[t._v("String")])]),t._v(" "),a("td",[a("code",[t._v("path.resolve(rootPath, './build')")])]),t._v(" "),a("td",[t._v("构建之后的目录，也是运行产物临时目录")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("logPath")])]),t._v(" "),a("td",[a("code",[t._v("String")])]),t._v(" "),a("td",[a("code",[t._v("path.resolve(buildPath, './logs')")])]),t._v(" "),a("td",[t._v("日志输出目录")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("mockServerPath")])]),t._v(" "),a("td",[a("code",[t._v("String")])]),t._v(" "),a("td",[a("code",[t._v("path.resolve(rootPath, './src')")])]),t._v(" "),a("td",[t._v("mock server 桩数据模块目录")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("port")])]),t._v(" "),a("td",[a("code",[t._v("Number")])]),t._v(" "),a("td",[a("code",[t._v("9527")])]),t._v(" "),a("td",[t._v("mockstar 启动之后的服务端口号")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("name")])]),t._v(" "),a("td",[a("code",[t._v("String")])]),t._v(" "),a("td",[a("code",[t._v("mockstar_${this.port}")])]),t._v(" "),a("td",[t._v("应用的名字，用于标识一个服务")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("isDev")])]),t._v(" "),a("td",[a("code",[t._v("Boolean")])]),t._v(" "),a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("当前是否为开发模式")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("watch")])]),t._v(" "),a("td",[a("code",[t._v("Boolean")])]),t._v(" "),a("td",[a("code",[t._v("false")])]),t._v(" "),a("td",[t._v("是否监听文件变化，推荐本地开发模式下使用")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("namespace")])]),t._v(" "),a("td",[a("code",[t._v("String")])]),t._v(" "),a("td",[a("code",[t._v("''")])]),t._v(" "),a("td",[t._v("命名空间")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("staticBasePath")])]),t._v(" "),a("td",[a("code",[t._v("String")])]),t._v(" "),a("td",[a("code",[t._v("/")])]),t._v(" "),a("td",[t._v("静态资源的基础路径，例如 "),a("code",[t._v("/s/")]),t._v(" ，或者 "),a("code",[t._v("/s/t/")])])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);