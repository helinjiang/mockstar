(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{627:function(t,e,a){"use strict";a.r(e);var s=a(69),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mocker-的-config-json-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mocker-的-config-json-配置"}},[t._v("#")]),t._v(" mocker 的 config.json 配置")]),t._v(" "),a("h2",{attrs:{id:"_1-类型定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-类型定义"}},[t._v("#")]),t._v(" 1. 类型定义")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n *\n * @param [route] 需要处理的路由，只有匹配到这个路由，才会被处理\n * @param [routeExtra] 额外的路由匹配参数\n * @param [name] 名字\n * @param [description] 简要描述\n * @param [disable] 此mocker是否为禁用状态，一旦设置为 true，则将忽略该mocker，而是去请求现网\n * @param [defaultModule] 默认初始化时激活的 mock module 名字\n * @param [activeModule] 当前激活的 mock module 名字\n * @param [method] http 请求方式，包括 get(默认) 和 post\n * @param [plugin] 数据mock类型，包括 xhr(默认) 和 async\n * @param [priority] 管理后台列表中排序的权重，值越大则越排在前面\n * @param [tags] 管理后台用到的标签，用于过滤，字符串数组\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MockerConfigOpt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  route"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  routeExtra"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Record"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("unknown")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  description"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  disable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  defaultModule"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  activeModule"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  method"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'POST'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'post'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  plugin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xhr'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'async'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  priority"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  tags"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_2-含义介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-含义介绍"}},[t._v("#")]),t._v(" 2. 含义介绍")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("字段名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("默认值")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("含义描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("route")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("String")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("''")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("需要处理的路由，只有匹配到这个路由，才会被处理")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("routeExtra")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Object")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("{}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("额外的路由匹配参数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("name")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("String")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("''")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("名字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("description")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("String")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("name")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("简要描述")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("disable")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Boolean")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("false")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("此 mocker 是否为禁用状态，一旦设置为 true，则将忽略该 mocker，而是去请求现网")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("defaultModule")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("String")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("''")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("默认初始化时激活的 mock module 名字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("activeModule")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("String")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("defaultModule")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("当前激活的 mock module 名字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("method")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("String")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("GET")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("http 请求方式，包括 get(默认) 和 post")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("plugin")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("String")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("XHR")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("数据mock类型，包括 xhr(默认) 和 async")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("priority")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("Number")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("0")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("管理后台列表中排序的权重，值越大则越排在前面")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("tags")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("String[]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("['全部']")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("管理后台用到的标签，用于过滤，字符串数组")])])])]),t._v(" "),a("h2",{attrs:{id:"_3-文件示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-文件示例"}},[t._v("#")]),t._v(" 3. 文件示例")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("目前仅支持 JSON 配置文件")])])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"description for demo_cgi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"route"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/cgi-bin/a/b/demo_cgi"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"defaultModule"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"success_type_1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"method"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);