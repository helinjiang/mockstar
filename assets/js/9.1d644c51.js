(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{584:function(e,t,r){e.exports=r.p+"assets/img/start.99c33d7e.png"},585:function(e,t,r){e.exports=r.p+"assets/img/manager-server.e0e9b7bc.png"},586:function(e,t,r){e.exports=r.p+"assets/img/construct.87343d5a.png"},587:function(e,t,r){e.exports=r.p+"assets/img/websocket.c1f090c6.png"},630:function(e,t,r){"use strict";r.r(t);var a=r(69),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"mockstar-方案说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mockstar-方案说明"}},[e._v("#")]),e._v(" MockStar 方案说明")]),e._v(" "),a("h2",{attrs:{id:"_1-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本概念"}},[e._v("#")]),e._v(" 1. 基本概念")]),e._v(" "),a("p",[e._v('我们一般说的"模拟数据"或者"假数据"，都是指为了某种目的而构造的数据。构造"假数据"来辅助开发的行为，我们称之为"数据打桩"，参考了 '),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E6%A1%A9_(%E8%AE%A1%E7%AE%97%E6%9C%BA)",target:"_blank",rel:"noopener noreferrer"}},[e._v("桩 (计算机)"),a("OutboundLink")],1),e._v(' 的概念。因此"假数据"也可称为"桩数据"。')]),e._v(" "),a("p",[e._v("为了更好的表述，在 MockStar 中，我们有两个概念需要说明下：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Mocker")]),e._v("，即桩对象，例如一条接口我们称之为一个 "),a("code",[e._v("Mocker")])]),e._v(" "),a("li",[a("code",[e._v("Mock Module")]),e._v('，即"桩数据"或"假数据"，例如接口包含的不同的结果，就有多个 '),a("code",[e._v("Mock Module")])])]),e._v(" "),a("h2",{attrs:{id:"_2-一个命令启动-mock-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-一个命令启动-mock-server"}},[e._v("#")]),e._v(" 2. 一个命令启动 Mock Server")]),e._v(" "),a("p",[e._v("MockStar 拥有比较少的 API，启动服务只需要一个命令即可，会自动按照约定的规则加载本地桩数据项目，生成一个 Mock Server 。")]),e._v(" "),a("p",[a("img",{attrs:{src:r(584),alt:""}})]),e._v(" "),a("h2",{attrs:{id:"_3-独立的管理平台-manager-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-独立的管理平台-manager-server"}},[e._v("#")]),e._v(" 3. 独立的管理平台 Manager Server")]),e._v(" "),a("p",[e._v("启动 Mock Server 的同时，还会启动一个独立的管理平台 Manager Server，支持对不同的桩数据进行管理。")]),e._v(" "),a("p",[a("img",{attrs:{src:r(585),alt:""}})]),e._v(" "),a("h2",{attrs:{id:"_4-基于-http-协议的传统-hxr-或-fetch-使用-mockstar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-基于-http-协议的传统-hxr-或-fetch-使用-mockstar"}},[e._v("#")]),e._v(" 4. 基于 http 协议的传统 HXR 或 fetch 使用 MockStar")]),e._v(" "),a("p",[e._v("基于 "),a("code",[e._v("http")]),e._v(" 协议的传统 "),a("code",[e._v("HXR")]),e._v(" 或 "),a("code",[e._v("fetch")]),e._v(" 使用 MockStar，有几个关键点：")]),e._v(" "),a("ul",[a("li",[e._v("需要借助一些代理工具，例如 whistle 或 fiddler，将真实请求转发到 MockStar Service 上")]),e._v(" "),a("li",[e._v("一旦接口命中了预定义的路由，则会获得该路由所属 Mocker 激活的 Mock Modules 桩数据（Mock 数据）")]),e._v(" "),a("li",[e._v("若未命中路由，则会透传到生产环境，并将结果返回")])]),e._v(" "),a("p",[a("img",{attrs:{src:r(586),alt:""}})]),e._v(" "),a("h2",{attrs:{id:"_5-websocket-或者-jsbridge-回调等异步数据使用-mockstar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-websocket-或者-jsbridge-回调等异步数据使用-mockstar"}},[e._v("#")]),e._v(" 5. WebSocket 或者 JSBridge 回调等异步数据使用 MockStar")]),e._v(" "),a("p",[e._v("而对于 "),a("code",[e._v("WebSocket")]),e._v(" 或 "),a("code",[e._v("JSBridge")]),e._v(" 回调等异步数据使用 MockStar，则会复杂一些，有几个关键点：")]),e._v(" "),a("ul",[a("li",[e._v("由于无法通过代理方式，因此需要利用 "),a("a",{attrs:{href:"https://sinonjs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("sinon.js"),a("OutboundLink")],1),e._v(' 来"劫持"请求')]),e._v(" "),a("li",[e._v("对于 "),a("code",[e._v("WebSocket")]),e._v(" 或 "),a("code",[e._v("JSBridge")]),e._v(" 回调等异步数据，可能会多次请求多次触发，因此需要借助 "),a("code",[e._v("WebSocket")]),e._v(" 来建立连接")]),e._v(" "),a("li",[e._v("有了 "),a("code",[e._v("WebSocket")]),e._v(' 建立连接之后，就可以在管理端可以主动"推动数据"')]),e._v(" "),a("li",[e._v("最后再借助于构建工具移除调试代码")])]),e._v(" "),a("p",[a("img",{attrs:{src:r(587),alt:""}})])])}),[],!1,null,null,null);t.default=s.exports}}]);